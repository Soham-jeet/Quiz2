{"version":3,"sources":["Components/Main2.jsx","Components/Quiz2.jsx","Components/End.jsx","App.jsx","index.js"],"names":["Main2","className","class","to","Quiz2","useState","ques","setQues","currQues","setCurrQues","optionChose","setOptionChose","score","setScore","history","useHistory","getQues","a","axios","get","res","console","log","data","results","useEffect","allAnswers","correct_answer","incorrect_answers","question","map","ans","index","type","onClick","length","push","finalScore","End","location","useLocation","state","showScore","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.481344ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Main2.css\";\r\n\r\nconst Main2 = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-4\">\r\n            <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_main2\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Welcome to weekly</h5>\r\n                <h6 className=\"card-subtitle mb-2\">Quiz Contest</h6>\r\n\r\n                <ul className=\"main2\">\r\n                  <li className=\"card-text\">\r\n                    This section contains 10 questions.\r\n                  </li>\r\n\r\n                  <li className=\"card-text\">\r\n                    Each correct answer will carry +1 marks.\r\n                  </li>\r\n                  <li className=\"card-text\">\r\n                    There will be no negative marking for wrong answer.\r\n                  </li>\r\n                </ul>\r\n                <NavLink class=\"btn btn-primary btn_main2\" to=\"/quiz2\">\r\n                  Start Quiz\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main2;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Quiz2.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Quiz2 = () => {\r\n  const [ques, setQues] = useState();\r\n  const [currQues, setCurrQues] = useState(0);\r\n  const [optionChose, setOptionChose] = useState(\"\");\r\n  const [score, setScore] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const getQues = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://opentdb.com/api.php?amount=10&category=21&difficulty=medium&type=multiple\"\r\n      );\r\n      console.log(res.data.results);\r\n      setQues(res.data.results);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQues();\r\n  }, []);\r\n\r\n  const shuffle = (array) => {\r\n    let currentIndex = array.length;\r\n    let randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 != currentIndex) {\r\n      //  Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      //  And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  // const shuffle = (array) => {\r\n  //   let currentIndex = array.length,\r\n  //     temporaryValue,\r\n  //     randomIndex;\r\n  //   while (0 !== currentIndex) {\r\n  //     randomIndex = Math.floor(Math.random() * currentIndex);\r\n  //     currentIndex -= 1;\r\n  //     temporaryValue = array[currentIndex];\r\n  //     array[currentIndex] = array[randomIndex];\r\n  //     array[randomIndex] = temporaryValue;\r\n  //   }\r\n  //   return array;\r\n  // };\r\n\r\n  const prevQuestion = () => {\r\n    setCurrQues(currQues - 1);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (ques[currQues].correct_answer == optionChose) {\r\n      setScore(score + 1);\r\n    }\r\n    console.log(\"Next\", score);\r\n    setCurrQues(currQues + 1);\r\n    setOptionChose(\"\");\r\n  };\r\n\r\n  const endQuiz = () => {\r\n    if (ques[currQues].correct_answer == optionChose) {\r\n      setScore(score + 1);\r\n      console.log(\"If\", score);\r\n      history.push(\"/end2\", { finalScore: score + 1 });\r\n    } else {\r\n      console.log(\"Else\", score);\r\n      history.push(\"/end2\", { finalScore: score });\r\n    }\r\n  };\r\n\r\n  let allAnswers;\r\n  {\r\n    ques != null &&\r\n      (allAnswers = [\r\n        ques[currQues].correct_answer,\r\n        ...ques[currQues].incorrect_answers,\r\n      ]);\r\n  }\r\n\r\n  // shuffle(allAnswers);\r\n  console.log(allAnswers);\r\n\r\n  return (\r\n    <>\r\n      {ques != null && (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-md-center\">\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_quiz2\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Question : {currQues + 1} </h5>\r\n                    <h6 className=\"card-subtitle mb-3\">\r\n                      {ques[currQues].question}\r\n                    </h6>\r\n\r\n                    {allAnswers.map((ans, index) => {\r\n                      return (\r\n                        <>\r\n                          <ul className=\"ul_quiz2\">\r\n                            <li className=\"card-text\">\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-light btn_quiz2\"\r\n                                onClick={() => {\r\n                                  setOptionChose(ans);\r\n                                }}\r\n                              >\r\n                                {ans}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        </>\r\n                      );\r\n                    })}\r\n\r\n                    {/* <ul className=\"ul_quiz\">\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() => {\r\n                            setOptionChose([ques[currQues].correct_answer]);\r\n                          }}\r\n                        >\r\n                          {ques[currQues].correct_answer}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[0],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[0]}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[1],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[1]}\r\n                        </button>\r\n                      </li>\r\n                      <li className=\"card-text\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn mt-1 mb-1 btn-light btn_quiz\"\r\n                          onClick={() =>\r\n                            setOptionChose([\r\n                              ques[currQues].incorrect_answers[2],\r\n                            ])\r\n                          }\r\n                        >\r\n                          {ques[currQues].incorrect_answers[2]}\r\n                        </button>\r\n                      </li>\r\n                    </ul> */}\r\n                    {currQues > 0 && (\r\n                      <a\r\n                        className=\"btn btn-primary btn_left\"\r\n                        onClick={prevQuestion}\r\n                      >\r\n                        Prev\r\n                      </a>\r\n                    )}\r\n\r\n                    {currQues != ques.length - 1 ? (\r\n                      <>\r\n                        <a\r\n                          className=\"btn btn-primary btn_right\"\r\n                          onClick={nextQuestion}\r\n                        >\r\n                          Next\r\n                        </a>\r\n                      </>\r\n                    ) : (\r\n                      <a\r\n                        className=\"btn btn-primary btn_right\"\r\n                        onClick={() => {\r\n                          endQuiz();\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </a>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz2;\r\n\r\n/*\r\n {ques != null && (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-md-center\">\r\n            <div className=\"col-sm-4\">\r\n              <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_quiz2\">\r\n                <div className=\"card-body\">\r\n                  {ques.map((curr, index) => {\r\n                    return (\r\n                      <>\r\n                        <h5 className=\"card-title\">Question : {index + 1} </h5>\r\n                        <h6 className=\"card-subtitle mb-2\">{curr.question}</h6>\r\n                        <ul className=\"ul_quiz2\">\r\n                          <li className=\"card-text\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn mt-1 mb-1 btn-light btn_quiz2\"\r\n                            >\r\n                              {curr.correct_answer}\r\n                            </button>\r\n                          </li>\r\n                          <li className=\"card-text\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn mt-1 mb-1 btn-light btn_quiz2\"\r\n                            >\r\n                              {curr.incorrect_answers[0]}\r\n                            </button>\r\n                          </li>\r\n                          <li className=\"card-text\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn mt-1 mb-1 btn-light btn_quiz2\"\r\n                            >\r\n                              {curr.incorrect_answers[1]}\r\n                            </button>\r\n                          </li>\r\n                          <li className=\"card-text\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn mt-1 mb-1 btn-light btn_quiz2\"\r\n                            >\r\n                              {curr.incorrect_answers[2]}\r\n                            </button>\r\n                          </li>\r\n                        </ul>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )} \r\n*/","import React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst End = () => {\r\n  const location = useLocation();\r\n  console.log(\"Avi\", location.state.finalScore);\r\n  let showScore = location.state.finalScore;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-sm-4\">\r\n            <div className=\"card pt-2 p-3 m-auto mt-5 mb-4 shadow card_end\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Congratulations!!!</h5>\r\n                <h6 className=\"card-subtitle mb-2\">\r\n                  You have scored {showScore} / 10 marks.\r\n                </h6>\r\n\r\n                <NavLink className=\"btn btn-primary btn_end\" to=\"/\">\r\n                  Play Again\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default End;","import React, { useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\nimport Quiz from \"./Quiz\";\r\nimport EndQuiz from \"./EndQuiz\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Main2 from \"./Components/Main2\";\r\nimport Quiz2 from \"./Components/Quiz2\";\r\nimport End from \"./Components/End\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [score, setScore] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {/* <Route exact path=\"/\" component={MainPage} />\r\n            <Route path=\"/quiz\" component={Quiz} />\r\n            <Route path=\"/end\" component={EndQuiz} /> */}\r\n            <Route exact path=\"/\" component={Main2} />\r\n            <Route path=\"/quiz2\" component={Quiz2} />\r\n            <Route path=\"/end2\" component={End} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n\r\n      {/* <MainPage /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}